---
# Docker CLI tools are now included with Docker Desktop
# docker-compose v2 is available as "docker compose" command

# kubectl is now installed via Homebrew

- name: Install global npm packages
  npm:
    name: "{{ item }}"
    global: yes
    state: present
  loop:
    - corepack
  ignore_errors: yes

# 1Password CLI is now installed via Homebrew

- name: Install Python packages via uv (if available)
  shell: "{{ ansible_env.HOME }}/.local/bin/uv tool install {{ item }}"
  loop:
    - ruff
    - black
    - mypy
  ignore_errors: yes

- name: Install Python packages via pipx (fallback)
  shell: "pipx install {{ item }}"
  loop:
    - ruff
    - black
    - mypy
  when: ansible_env.HOME + "/.local/bin/uv" is not exists
  ignore_errors: yes

- name: Ensure command line tools are in PATH
  blockinfile:
    path: "{{ user_home }}/.zshrc"
    marker: "# {mark} ANSIBLE MANAGED CLI TOOLS PATH"
    block: |
      # Additional CLI tools paths
      export PATH="/usr/local/bin:$PATH"
      export PATH="$HOME/.local/bin:$PATH"
      
      # Docker completion (if available)
      if command -v docker &> /dev/null; then
        autoload -U +X bashcompinit && bashcompinit
        complete -o default -F __start_docker docker 2>/dev/null || true
      fi
      
      # Kubectl completion (if available)
      if command -v kubectl &> /dev/null; then
        source <(kubectl completion zsh) 2>/dev/null || true
      fi
      
      # 1Password CLI completion (installed via Homebrew)
      if command -v op &> /dev/null; then
        eval "$(op completion zsh)" 2>/dev/null || true
      fi

- name: Create symlinks for CLI tools installed via GUI apps
  file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
    force: yes
  loop:
    - { src: "/Applications/Cursor.app/Contents/Resources/app/bin/cursor", dest: "/usr/local/bin/cursor" }
    - { src: "/Applications/Visual Studio Code.app/Contents/Resources/app/bin/code", dest: "/usr/local/bin/code" }
    - { src: "/Applications/Ghostty.app/Contents/MacOS/ghostty", dest: "/usr/local/bin/ghostty" }
  ignore_errors: yes